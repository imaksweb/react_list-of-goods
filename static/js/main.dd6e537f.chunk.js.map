{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortByName","setState","ALPABET","sortByLength","LENGTH","reverseGoods","reset","visibleGoods","goods","sort","a","b","localeCompare","length","Error","reverse","getReorderedGoods","this","className","type","cn","onClick","map","good","uuidv4","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAoBKA,E,gHAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAgDE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,WAAa,WACX,EAAKC,SAAS,CACZH,SAAUL,EAASS,WARzB,EAYEC,aAAe,WACb,EAAKF,SAAS,CACZH,SAAUL,EAASW,UAdzB,EAkBEC,aAAe,WACb,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBApBzB,EAwBES,MAAQ,WACN,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QA3BzB,4CA+BE,WACE,IAAMQ,EApEH,SACLC,EADK,GAGJ,IADCV,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNU,EAAY,YAAOC,GAGzB,OAAQV,GACN,KAAKL,EAASS,QACZK,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MAEF,KAAKlB,EAASW,OACZG,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UACzC,MAEF,KAAKpB,EAASM,KACZ,MAEF,QACE,MAAM,IAAIe,MAAM,eAOpB,OAJIjB,GACFU,EAAaQ,UAGRR,EAwCgBS,CAAkBtB,EAAiBuB,KAAKrB,OAC7D,EAAiCqB,KAAKrB,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WAElB,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CACE,WAAYtB,IAAaL,EAASS,UAGtCmB,QAASJ,KAAKjB,WAThB,iCAcA,wBACEmB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,WAAYtB,IAAaL,EAASW,SAGtCiB,QAASJ,KAAKd,aAThB,4BAcA,wBACEgB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,YAAavB,IAGjBwB,QAASJ,KAAKZ,aAThB,sBAcEP,IAAaL,EAASM,OAAuB,IAAfF,IAC9B,wBACEsB,KAAK,SACLD,UAAU,4BACVG,QAASJ,KAAKX,MAHhB,sBAUJ,6BACGC,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBC,2BA7FpC,GAAyBC,IAAMC,WCjE/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.dd6e537f.chunk.js","sourcesContent":["import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  switch (sortType) {\n    case SortType.ALPABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n\n    case SortType.NONE:\n      break;\n\n    default:\n      throw new Error('Wrong type!');\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByName = () => {\n    this.setState({\n      sortType: SortType.ALPABET,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  reverseGoods = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const visibleGoods = getReorderedGoods(goodsFromServer, this.state);\n    const { sortType, isReversed } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={cn(\n              'button',\n              'is-info',\n              {\n                'is-light': sortType !== SortType.ALPABET,\n              },\n            )}\n            onClick={this.sortByName}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn(\n              'button',\n              'is-success',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn(\n              'button',\n              'is-warning',\n              {\n                'is-light': !isReversed,\n              },\n            )}\n            onClick={this.reverseGoods}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed === true) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {visibleGoods.map(good => (\n            <li data-cy=\"Good\" key={uuidv4()}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}